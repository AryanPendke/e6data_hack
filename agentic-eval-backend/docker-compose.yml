version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: agentic-eval-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: agentic-eval
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - agentic-eval-network

  # Redis Cache and Queue
  redis:
    image: redis:7.2-alpine
    container_name: agentic-eval-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - agentic-eval-network

  # Node.js Backend
  backend:
    build:
      context: ./node-backend
      dockerfile: Dockerfile
    container_name: agentic-eval-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password@mongodb:27017/agentic-eval?authSource=admin
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 3001
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./python-workers:/app/python-workers:ro
    networks:
      - agentic-eval-network

  # Python Workers (optional - can run separately)
  worker:
    build:
      context: ./python-workers
      dockerfile: Dockerfile
    container_name: agentic-eval-worker
    restart: unless-stopped
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - redis
      - backend
    volumes:
      - ./python-workers:/app:ro
    networks:
      - agentic-eval-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  agentic-eval-network:
    driver: bridge